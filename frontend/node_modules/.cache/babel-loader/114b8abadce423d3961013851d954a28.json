{"ast":null,"code":"var _jsxFileName = \"/Users/davegb313/code/parties/src/user/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Button from \"../shared/UIElemnets/Button\";\nimport Card from \"../shared/UIElemnets/Card\";\nimport \"./Auth.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = props => {\n  _s();\n\n  const [isLoginMode, setIsLoginMode] = useState(true);\n\n  const switchModeHandler = () => {\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: isLoginMode ? /*#__PURE__*/_jsxDEV(Card, {\n      className: \"auth\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"LOGIN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        inverse: true,\n        onClick: switchModeHandler,\n        children: [\"SWITCH TO \", isLoginMode ? 'SIGNUP' : 'LOGIN']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Card, {\n      className: \"auth\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"SIGNUP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        inverse: true,\n        onClick: switchModeHandler,\n        children: [\"SWITCH TO \", isLoginMode ? 'SIGNUP' : 'LOGIN']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Auth, \"01jftG454T0sT2galWzcYZLnBZw=\");\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/Users/davegb313/code/parties/src/user/Auth.js"],"names":["React","useState","Button","Card","Auth","props","isLoginMode","setIsLoginMode","switchModeHandler","prevMode"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AAEA,OAAOC,IAAP,MAAiB,2BAAjB;AACA,OAAO,YAAP;;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAAG;AAAA;;AACjB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,IAAD,CAA9C;;AAEA,QAAMO,iBAAiB,GAAG,MAAM;AAC5BD,IAAAA,cAAc,CAACE,QAAQ,IAAI,CAACA,QAAd,CAAd;AACH,GAFD;;AAIA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,cACKH,WAAW,gBACZ,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,OAAO,MAAf;AAAgB,QAAA,OAAO,EAAEE,iBAAzB;AAAA,iCACeF,WAAW,GAAG,QAAH,GAAc,OADxC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADY,gBAQZ,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,OAAO,MAAf;AAAgB,QAAA,OAAO,EAAEE,iBAAzB;AAAA,iCACeF,WAAW,GAAG,QAAH,GAAc,OADxC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CA5BD;;GAAMF,I;;KAAAA,I;AA8BN,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Button from \"../shared/UIElemnets/Button\";\n\nimport Card from \"../shared/UIElemnets/Card\";\nimport \"./Auth.css\";\n\nconst Auth = props =>{\n    const [isLoginMode, setIsLoginMode] = useState(true)\n\n    const switchModeHandler = () => {\n        setIsLoginMode(prevMode => !prevMode);\n    }\n\n    return (\n        <React.Fragment>\n            {isLoginMode ? (\n            <Card className=\"auth\">\n                <h2>LOGIN</h2>\n                <Button inverse onClick={switchModeHandler}>\n                    SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n                </Button>\n            </Card>\n            ) : (\n            <Card className=\"auth\">\n                <h2>SIGNUP</h2>\n                <Button inverse onClick={switchModeHandler}>\n                    SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n                </Button>\n            </Card>\n            )\n            }\n            \n        </React.Fragment>\n    )\n}\n\nexport default Auth;"]},"metadata":{},"sourceType":"module"}