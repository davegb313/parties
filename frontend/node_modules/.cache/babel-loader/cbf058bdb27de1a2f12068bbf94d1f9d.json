{"ast":null,"code":"var _jsxFileName = \"/Users/davegb313/code/parties/frontend/src/user/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Button from \"../shared/UIElemnets/Button\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH, VALIDATOR_EMAIL } from \"../shared/util/validators\";\nimport { useForm } from \"../shared/hooks/form-hook\";\nimport { AuthContext } from \"../shared/context/auth-context\";\nimport Card from \"../shared/UIElemnets/Card\";\nimport Input from \"../shared/UIElemnets/Input\";\nimport \"./Auth.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [formState, inputHandler, setFromData] = useForm({\n    email: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFromData({ ...formState.inputs,\n        username: undefined\n      }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n    } else {\n      setFromData({ ...formState.inputs,\n        username: {\n          value: '',\n          isValid: false\n        }\n      }, false);\n    }\n\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmithandler = async event => {\n    // if(isLoginMode) {\n    // } else {\n    // try {\n    console.log('im here');\n    const response = await fetch('http://localhost:4000/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: formState.inputs.username.value,\n        email: formState.inputs.email.value,\n        password: formState.inputs.password.value\n      })\n    });\n    const resData = await response.json();\n    console.log(resData); // } catch(err) {\n    //     console.log(err);\n    // }\n    // }\n\n    auth.login();\n    navigate('/');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"auth\",\n    children: [isLoginMode ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"LOGIN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 28\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"SIGNUP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 45\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: authSubmithandler,\n      children: [!isLoginMode && /*#__PURE__*/_jsxDEV(Input, {\n        id: \"username\",\n        label: \"username\",\n        element: \"input\",\n        validators: [VALIDATOR_REQUIRE()],\n        errorText: \"Plaese enter a valid username\",\n        onInput: inputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"email\",\n        label: \"email\",\n        element: \"input\",\n        validators: [VALIDATOR_EMAIL()],\n        errorText: \"Plaese enter a valid email\",\n        onInput: inputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), !isLoginMode && /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"IMAGE UPLOAD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"password\",\n        label: \"password\",\n        element: \"input\",\n        type: \"password\",\n        validators: [VALIDATOR_MINLENGTH(6)],\n        errorText: \"Plaese enter a valid password\",\n        onInput: inputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-footer\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          disabled: !formState.isValid,\n          children: isLoginMode ? 'LOGIN' : 'SIGNUP'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      inverse: true,\n      onClick: switchModeHandler,\n      children: [\"SWITCH TO \", isLoginMode ? 'SIGNUP' : 'LOGIN']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Auth, \"Bhe949A/HmpyxLAFFu7UKOc/9ls=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/Users/davegb313/code/parties/frontend/src/user/Auth.js"],"names":["React","useContext","useState","useNavigate","Button","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","VALIDATOR_EMAIL","useForm","AuthContext","Card","Input","Auth","navigate","auth","isLoginMode","setIsLoginMode","formState","inputHandler","setFromData","email","value","isValid","password","switchModeHandler","inputs","username","undefined","prevMode","authSubmithandler","event","console","log","response","fetch","method","headers","body","JSON","stringify","resData","json","login"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport Button from \"../shared/UIElemnets/Button\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH, VALIDATOR_EMAIL } from \"../shared/util/validators\";\nimport { useForm } from \"../shared/hooks/form-hook\";\nimport { AuthContext } from \"../shared/context/auth-context\";\nimport Card from \"../shared/UIElemnets/Card\";\nimport Input from \"../shared/UIElemnets/Input\";\nimport \"./Auth.css\";\n\nconst Auth = () =>{\n    const navigate = useNavigate();\n    const auth = useContext(AuthContext);\n    const [isLoginMode, setIsLoginMode] = useState(true)\n    const [formState, inputHandler, setFromData] = useForm(\n        {\n            email: {\n                value: '',\n                isValid: false\n            },\n            password: {\n                value: '',\n                isValid: false\n            },\n        },\n        false\n    );\n\n    const switchModeHandler = () => {\n        if (!isLoginMode) {\n            setFromData({\n                ...formState.inputs,\n                username: undefined\n            },\n            formState.inputs.email.isValid && formState.inputs.password.isValid\n            );\n        } else {\n            setFromData({\n                ...formState.inputs,\n                username: {\n                    value: '',\n                    isValid: false\n                }\n            },\n            false\n            );\n        }\n        setIsLoginMode(prevMode => !prevMode);\n    };\n\n    const authSubmithandler = async event => {\n        \n        // if(isLoginMode) {\n        // } else {\n            // try {\n                console.log('im here');\n                const response = await fetch('http://localhost:4000/signup', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type' : 'application/json'\n                    },\n                    body: JSON.stringify({\n                        username: formState.inputs.username.value,\n                        email: formState.inputs.email.value,\n                        password: formState.inputs.password.value\n                    })\n                });\n                const resData = await response.json();\n                console.log(resData);\n            // } catch(err) {\n            //     console.log(err);\n            // }\n        // }\n        auth.login();\n        navigate('/');\n    }\n\n    return (\n        <Card className=\"auth\">\n            {isLoginMode ? <h2>LOGIN</h2> : <h2>SIGNUP</h2>}\n            <form onSubmit={authSubmithandler}>\n                {!isLoginMode && (\n                    <Input \n                        id=\"username\" \n                        label=\"username\" \n                        element=\"input\" \n                        validators={[VALIDATOR_REQUIRE()]} \n                        errorText=\"Plaese enter a valid username\"\n                        onInput={inputHandler}\n                    />\n                )}\n                <Input \n                    id=\"email\" \n                    label=\"email\" \n                    element=\"input\" \n                    validators={[VALIDATOR_EMAIL()]} \n                    errorText=\"Plaese enter a valid email\"\n                    onInput={inputHandler}\n                />\n                {!isLoginMode && (\n                    <h3>IMAGE UPLOAD</h3>\n                )}\n                <Input \n                    id=\"password\" \n                    label=\"password\" \n                    element=\"input\" \n                    type=\"password\" \n                    validators={[VALIDATOR_MINLENGTH(6)]} \n                    errorText=\"Plaese enter a valid password\"\n                    onInput={inputHandler}\n                />\n                <div className=\"auth-footer\">\n                    <Button type=\"submit\" disabled={!formState.isValid}>\n                        {isLoginMode ? 'LOGIN' : 'SIGNUP'}\n                    </Button>\n                </div>\n            </form>\n            <Button inverse onClick={switchModeHandler}>\n                SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n            </Button>\n        </Card>\n    )\n}\n\nexport default Auth;"]},"metadata":{},"sourceType":"module"}