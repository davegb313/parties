{"ast":null,"code":"var _jsxFileName = \"/Users/davegb313/code/new-parties-project/frontend/src/parties/components/PartyItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Card from \"../../shared/UIElemnets/Card\";\nimport Button from \"../../shared/UIElemnets/Button\";\nimport Modal from \"../../shared/UIElemnets/Modal\";\nimport ErrorModal from \"../../shared/UIElemnets/ErrorModal\";\nimport LoadingSpinner from \"../../shared/UIElemnets/LoadingSpinner\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport \"./PartyItem.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PartyItem = props => {\n  _s();\n\n  const {\n    isLoading,\n    sendRequest,\n    error,\n    clearError\n  } = useHttpClient();\n  const [showModal, setShowModal] = useState(false);\n\n  const openModalHandler = () => setShowModal(true);\n\n  const closeModalHandler = () => setShowModal(false);\n\n  const auth = useContext(AuthContext);\n  const navigate = useNavigate();\n  const partyId = props.id;\n  const [formState, inputHandler, setFromData] = useForm({\n    title: {\n      value: '',\n      isValid: false\n    },\n    description: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n\n  const submitHandler = event => {\n    event.preventDefault(); // setFormData(\n    //     {\n    //       title: {\n    //         value: responseData.place.title,\n    //         isValid: true\n    //       },\n    //       description: {\n    //         value: responseData.place.description,\n    //         isValid: true\n    //       }\n    //     },\n    //     true\n    //   );\n\n    setShowModal(false);\n  };\n\n  const toUpdatingMode = props => navigate(`/parties/party/${partyId}`);\n\n  const deleteParty = async () => {\n    try {\n      await sendRequest(`http://localhost:4000/parties/${partyId}`, 'DELETE', null, {\n        Authorization: 'Bearer ' + auth.token\n      });\n      props.onDelete(props.id);\n    } catch (err) {}\n  };\n\n  const saveParty = async () => {\n    try {\n      await sendRequest(`http://localhost:4000/parties/save/${partyId}`, 'POST', JSON.stringify({\n        userId: auth.userId\n      }), {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + auth.token\n      });\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: error,\n      onClear: clearError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onClose: closeModalHandler,\n      onSubmit: submitHandler,\n      header: /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: closeModalHandler,\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this),\n      footer: /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [props.creator === auth.userId ? /*#__PURE__*/_jsxDEV(Button, {\n          onClick: deleteParty,\n          children: \"DELETE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 61\n        }, this) : null, props.creator === auth.userId ? /*#__PURE__*/_jsxDEV(Button, {\n          onClick: toUpdatingMode,\n          children: \"UPDATE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 30\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          onClick: saveParty,\n          children: \"ATTEND\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: props.image,\n        alt: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"About:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: props.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"We're partying at:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"party-item\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n          asOverlay: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"party-item-image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: props.image,\n            alt: props.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"party-item-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: props.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"party-item-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: openModalHandler,\n              children: \"DETAILS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this), props.isLoggedIn ? null : props.creator === auth.userId ? null : /*#__PURE__*/_jsxDEV(Button, {\n              onClick: saveParty,\n              children: \"ATTEND\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 42\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PartyItem, \"RPYUfzQDJvol2VJVrm+vTPtNr1c=\", false, function () {\n  return [useHttpClient, useNavigate, useForm];\n});\n\n_c = PartyItem;\nexport default PartyItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"PartyItem\");","map":{"version":3,"sources":["/Users/davegb313/code/new-parties-project/frontend/src/parties/components/PartyItem.js"],"names":["React","useContext","useState","useNavigate","Card","Button","Modal","ErrorModal","LoadingSpinner","useForm","useHttpClient","AuthContext","PartyItem","props","isLoading","sendRequest","error","clearError","showModal","setShowModal","openModalHandler","closeModalHandler","auth","navigate","partyId","id","formState","inputHandler","setFromData","title","value","isValid","description","submitHandler","event","preventDefault","toUpdatingMode","deleteParty","Authorization","token","onDelete","err","saveParty","JSON","stringify","userId","creator","image","address","isLoggedIn"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport Card from \"../../shared/UIElemnets/Card\";\nimport Button from \"../../shared/UIElemnets/Button\";\nimport Modal from \"../../shared/UIElemnets/Modal\";\nimport ErrorModal from \"../../shared/UIElemnets/ErrorModal\";\nimport LoadingSpinner from \"../../shared/UIElemnets/LoadingSpinner\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport \"./PartyItem.css\";\n\nconst PartyItem = props => {\n    const { isLoading, sendRequest, error, clearError } = useHttpClient();\n    const [showModal, setShowModal] = useState(false);\n    const openModalHandler = () => setShowModal(true);\n    const closeModalHandler = () => setShowModal(false);\n    const auth = useContext(AuthContext);\n    const navigate = useNavigate();\n    const partyId = props.id;\n\n    const [formState, inputHandler, setFromData] = useForm({\n        title: {\n            value: '',\n            isValid: false\n        },\n        description: {\n            value: '',\n            isValid: false\n        }\n    },\n        false\n    );\n\n    const submitHandler = event => {\n        event.preventDefault();\n        // setFormData(\n        //     {\n        //       title: {\n        //         value: responseData.place.title,\n        //         isValid: true\n        //       },\n        //       description: {\n        //         value: responseData.place.description,\n        //         isValid: true\n        //       }\n        //     },\n        //     true\n        //   );\n\n        setShowModal(false);\n    };\n    const toUpdatingMode = props => navigate(`/parties/party/${partyId}`);\n\n    const deleteParty = async () => {\n        try {\n            await sendRequest(\n                `http://localhost:4000/parties/${partyId}`,\n                'DELETE',\n                null,\n                {\n                    Authorization: 'Bearer ' + auth.token\n                }\n            )\n            props.onDelete(props.id);\n        } catch (err) { }\n    };\n\n    const saveParty = async () => {\n        try {\n            await sendRequest(\n                `http://localhost:4000/parties/save/${partyId}`,\n                'POST',\n                JSON.stringify({\n                    userId: auth.userId\n                }),\n                {\n                    'Content-Type': 'application/json',\n                    Authorization: 'Bearer ' + auth.token\n                }\n            )\n        } catch (err) { }\n    }\n\n    return (\n        <React.Fragment>\n            <ErrorModal error={error} onClear={clearError} />\n            <Modal\n                show={showModal}\n                onClose={closeModalHandler}\n                onSubmit={submitHandler}\n                header={\n                    <React.Fragment>\n                        <h2>{props.title}</h2>\n                        <Button onClick={closeModalHandler}>X</Button>\n                    </React.Fragment>\n                }\n                footer={\n                    <React.Fragment>\n                        {(props.creator === auth.userId) ? (<Button onClick={deleteParty}>DELETE</Button>) : null}\n                        {(props.creator === auth.userId)\n                            ?\n                            (<Button onClick={toUpdatingMode}>UPDATE</Button>)\n                            :\n                            ((<Button onClick={saveParty}>ATTEND</Button>))}\n                    </React.Fragment>\n                }\n            >\n                <img\n                    src={props.image}\n                    alt={props.title}\n                />\n                <h3>About:</h3>\n                <h2>{props.description}</h2>\n                <h3>We're partying at:</h3>\n                <p>{props.address}</p>\n            </Modal>\n            <li className=\"party-item\">\n                <Card>\n                    {isLoading && <LoadingSpinner asOverlay />}\n                    <div className=\"party-item-image\">\n                        <img\n                            src={props.image}\n                            alt={props.title}\n                        />\n                    </div>\n                    <div className=\"party-item-footer\">\n                        <h2>{props.title}</h2>\n                        <div className=\"party-item-buttons\">\n                            <Button onClick={openModalHandler}>DETAILS</Button>\n                            {props.isLoggedIn ?\n                                null :\n                                (\n                                    (props.creator === auth.userId) ?\n                                        null :\n                                        (<Button onClick={saveParty}>ATTEND</Button>)\n                                )\n                            }\n                        </div>\n                    </div>\n                </Card>\n            </li>\n        </React.Fragment>\n    );\n}\n\nexport default PartyItem;"]},"metadata":{},"sourceType":"module"}