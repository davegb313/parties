{"ast":null,"code":"var _jsxFileName = \"/Users/davegb313/code/new-parties-project/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport Parties from './parties/pages/Parties';\nimport MainNavigation from './shared/Navigation/MainNavigation';\nimport NewParty from './parties/pages/NewParty';\nimport Auth from './user/Auth';\nimport UserInfo from './user/UserInfo';\nimport { AuthContext } from './shared/context/auth-context';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userId, setUserId] = useState(undefined);\n  const login = useCallback(uid => {\n    setIsLoggedIn(true);\n    setUserId(uid);\n    console.log(uid, userId);\n  });\n  const logout = useCallback(() => {\n    setIsLoggedIn(false);\n    setUserId(null);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      userId: userId,\n      login: login,\n      logout: logout\n    },\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(MainNavigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/parties/all\",\n            element: /*#__PURE__*/_jsxDEV(Parties, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 55\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/parties/new\",\n            element: /*#__PURE__*/_jsxDEV(NewParty, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 55\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/parties/:userId\",\n            element: /*#__PURE__*/_jsxDEV(UserInfo, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 59\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/parties/all\",\n            element: /*#__PURE__*/_jsxDEV(Parties, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 55\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/auth\",\n            element: /*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 48\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"/hRs7z+84EJ8LmUzwnUGGjPWHhM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/davegb313/code/new-parties-project/frontend/src/App.js"],"names":["React","useState","useCallback","BrowserRouter","Route","Routes","Parties","MainNavigation","NewParty","Auth","UserInfo","AuthContext","App","isLoggedIn","setIsLoggedIn","userId","setUserId","undefined","login","uid","console","log","logout"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SACEC,aADF,EAEEC,KAFF,EAGEC,MAHF,QAIO,kBAJP;AAMA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,OAAO,WAAP;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACc,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAACgB,SAAD,CAApC;AAEA,QAAMC,KAAK,GAAGhB,WAAW,CAAEiB,GAAD,IAAS;AACjCL,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAE,IAAAA,SAAS,CAACG,GAAD,CAAT;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAAiBJ,MAAjB;AACD,GAJwB,CAAzB;AAMA,QAAMO,MAAM,GAAGpB,WAAW,CAAC,MAAM;AAC/BY,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAE,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GAHyB,EAGvB,EAHuB,CAA1B;AAKA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLH,MAAAA,UAAU,EAAEA,UADP;AAELE,MAAAA,MAAM,EAAEA,MAFH;AAGLG,MAAAA,KAAK,EAAEA,KAHF;AAILI,MAAAA,MAAM,EAAEA;AAJH,KADT;AAAA,2BAQE,QAAC,aAAD;AAAA,8BACI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBACKT,UAAU,gBACT,QAAC,MAAD;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,cAAZ;AAA2B,YAAA,OAAO,eAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAApC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,cAAZ;AAA2B,YAAA,OAAO,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAApC;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,kBAAZ;AAA+B,YAAA,OAAO,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAxC;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADS,gBAOT,QAAC,MAAD;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,cAAZ;AAA2B,YAAA,OAAO,eAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAApC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,OAAZ;AAAoB,YAAA,OAAO,eAAE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAA7B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AARN;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CA3CD;;GAAMD,G;;KAAAA,G;AA6CN,eAAeA,GAAf","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport {\n  BrowserRouter,\n  Route,\n  Routes\n} from \"react-router-dom\";\n\nimport Parties from './parties/pages/Parties';\nimport MainNavigation from './shared/Navigation/MainNavigation';\nimport NewParty from './parties/pages/NewParty';\nimport Auth from './user/Auth';\nimport UserInfo from './user/UserInfo';\nimport { AuthContext } from './shared/context/auth-context';\nimport './App.css';\n\n\nconst App = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userId, setUserId] = useState(undefined);\n\n  const login = useCallback((uid) => {\n    setIsLoggedIn(true);\n    setUserId(uid);\n    console.log(uid, userId);\n  });\n\n  const logout = useCallback(() => {\n    setIsLoggedIn(false);\n    setUserId(null);\n  }, []);\n\n  return (\n    <AuthContext.Provider\n      value={{ \n        isLoggedIn: isLoggedIn,\n        userId: userId,\n        login: login, \n        logout: logout \n      }}\n    >\n      <BrowserRouter>\n          <MainNavigation />\n          <main>\n              {isLoggedIn ? (\n                <Routes>\n                  <Route path=\"/parties/all\" element={<Parties />} />\n                  <Route path=\"/parties/new\" element={<NewParty/>} />\n                  <Route path=\"/parties/:userId\" element={<UserInfo />} />\n                </Routes>\n              ) : (\n                <Routes>\n                  <Route path=\"/parties/all\" element={<Parties />} />\n                  <Route path=\"/auth\" element={<Auth />} />\n                </Routes>\n              )}\n          </main>\n      </BrowserRouter>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}