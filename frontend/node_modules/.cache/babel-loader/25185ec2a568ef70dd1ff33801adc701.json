{"ast":null,"code":"var _jsxFileName = \"/Users/davegb313/code/new-parties-project/frontend/src/user/UserInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport AttendingItem from \"../parties/components/AttendingItem\";\nimport { AuthContext } from \"../shared/context/auth-context\";\nimport { useHttpClient } from \"../shared/hooks/http-hook\";\nimport ErrorModal from \"../shared/UIElemnets/ErrorModal\";\nimport LoadingSpinner from \"../shared/UIElemnets/LoadingSpinner\";\nimport PartyList from \"../parties/components/PartyList\";\nimport Avatar from \"../shared/UIElemnets/Avatar\";\nimport Card from \"../shared/UIElemnets/Card\";\nimport \"./UserInfo.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserInfo = props => {\n  _s();\n\n  const auth = useContext(AuthContext);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [loadedUser, setLoadedUser] = useState();\n  const [loadedUserParties, setLoadedUserParties] = useState();\n  const userId = auth.userId;\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const userDataRes = await sendRequest(`http://localhost:4000/user/${userId}`);\n        setLoadedUser(userDataRes.user);\n        const userPartiesRes = await sendRequest(`http://localhost:4000/parties/${userId}`);\n        userPartiesRes ? setLoadedUserParties(userPartiesRes) : setLoadedUserParties([]);\n      } catch (err) {}\n    };\n\n    fetchUser();\n  }, [sendRequest]);\n  console.log(loadedUserParties);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: error,\n      onClick: clearError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this), !isLoading && loadedUser && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          className: \"personal-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"personal-info-img\",\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              image: loadedUser.image,\n              alt: \"user-photo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: loadedUser.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"personal-info-email\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: loadedUser.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-attend\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"attending-title\",\n            children: \"Parties you're attending at:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"attending-list\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"your-parties-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Your Parties\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(PartyList, {\n        items: loadedUserParties,\n        isLoggedIn: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserInfo, \"J5qK02rbD7qoH4EzHR6Ennntsfg=\", false, function () {\n  return [useHttpClient];\n});\n\n_c = UserInfo;\nexport default UserInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserInfo\");","map":{"version":3,"sources":["/Users/davegb313/code/new-parties-project/frontend/src/user/UserInfo.js"],"names":["React","useState","useEffect","useContext","AttendingItem","AuthContext","useHttpClient","ErrorModal","LoadingSpinner","PartyList","Avatar","Card","UserInfo","props","auth","isLoading","error","sendRequest","clearError","loadedUser","setLoadedUser","loadedUserParties","setLoadedUserParties","userId","fetchUser","userDataRes","user","userPartiesRes","err","console","log","image","username","email"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\n\nimport AttendingItem from \"../parties/components/AttendingItem\";\nimport { AuthContext } from \"../shared/context/auth-context\";\nimport { useHttpClient } from \"../shared/hooks/http-hook\";\nimport ErrorModal from \"../shared/UIElemnets/ErrorModal\";\nimport LoadingSpinner from \"../shared/UIElemnets/LoadingSpinner\";\nimport PartyList from \"../parties/components/PartyList\";\nimport Avatar from \"../shared/UIElemnets/Avatar\";\nimport Card from \"../shared/UIElemnets/Card\";\n\nimport \"./UserInfo.css\";\n\nconst UserInfo = props => {\n    const auth = useContext(AuthContext);\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\n    const [loadedUser, setLoadedUser] = useState();\n    const [loadedUserParties, setLoadedUserParties] = useState();\n    const userId = auth.userId\n\n    useEffect(() => {\n        const fetchUser =  async () => {\n            try {\n                const userDataRes = await sendRequest(`http://localhost:4000/user/${userId}`);\n                setLoadedUser(userDataRes.user);\n                const userPartiesRes = await sendRequest(`http://localhost:4000/parties/${userId}`);\n                userPartiesRes ? setLoadedUserParties(userPartiesRes) : setLoadedUserParties([])\n            } catch (err) {}\n        }\n        fetchUser()\n    }, [sendRequest])\n\n    console.log(loadedUserParties);\n    return (\n        <React.Fragment>\n            <ErrorModal error={error} onClick={clearError} />\n            {isLoading && (\n                <div className=\"center\">\n                    <LoadingSpinner />\n                </div>\n            )}\n            {!isLoading && loadedUser && (\n                <>\n                    <div className=\"user-info\">\n                        <Card className=\"personal-info\">\n                            <div className=\"personal-info-img\">\n                                <Avatar\n                                    image={loadedUser.image}\n                                    alt={\"user-photo\"}\n                                />\n                                <h3>{loadedUser.username}</h3>\n                            </div>\n                            <div className=\"personal-info-email\">\n                                <h4>Email:</h4>\n                                <p>{loadedUser.email}</p>\n                            </div>\n                        </Card>\n                        <div className=\"user-attend\">\n                            <h3 className=\"attending-title\">Parties you're attending at:</h3>\n                            <ul className=\"attending-list\">\n                                { }\n                            </ul>\n                        </div>\n                    </div>\n                    <div className=\"your-parties-header\">\n                        <h1>Your Parties</h1>\n                    </div>\n                    <PartyList items={loadedUserParties} isLoggedIn={true} />\n                </>\n            )}\n        </React.Fragment>\n    )\n}\n\nexport default UserInfo;"]},"metadata":{},"sourceType":"module"}