{"ast":null,"code":"var _jsxFileName = \"/Users/davegb313/code/parties/frontend/src/user/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport Button from \"../shared/UIElemnets/Button\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH, VALIDATOR_EMAIL } from \"../shared/util/validators\";\nimport { useForm } from \"../shared/hooks/form-hook\";\nimport { AuthContext } from \"../shared/context/auth-context\";\nimport Card from \"../shared/UIElemnets/Card\";\nimport Input from \"../shared/UIElemnets/Input\";\nimport \"./Auth.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = props => {\n  _s();\n\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const auth = useContext(AuthContext);\n  const [formState, inputHandler, setFromData] = useForm({\n    email: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFromData({ ...formState.inputs,\n        username: undefined,\n        image: undefined\n      }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n    } else {\n      setFromData({ ...formState.inputs,\n        username: {\n          value: '',\n          isValid: false\n        }\n      }, false);\n    }\n\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmithandler = async event => {\n    event.prevrntDefault();\n\n    if (isLoginMode) {} else {\n      try {\n        let response = await fetch('http://localhost:4000/signup', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username: formState.inputs.username.value,\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          })\n        });\n        let resData = await response.json();\n        console.log(resData);\n      } catch (err) {\n        console.log('err');\n      }\n    }\n\n    auth.login();\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: isLoginMode ? /*#__PURE__*/_jsxDEV(Card, {\n      className: \"auth\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"LOGIN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: authSubmithandler,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          id: \"username\",\n          label: \"username\",\n          element: \"input\",\n          validators: [VALIDATOR_REQUIRE()],\n          errorText: \"Plaese enter a valid username\",\n          onInput: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"password\",\n          label: \"password\",\n          element: \"input\",\n          type: \"password\",\n          validators: [VALIDATOR_MINLENGTH(6)],\n          errorText: \"Plaese enter a valid password\",\n          onInput: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-footer\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            inverse: true,\n            onClick: switchModeHandler,\n            children: [\"SWITCH TO \", isLoginMode ? 'SIGNUP' : 'LOGIN']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            children: \"LOGIN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Card, {\n      className: \"auth\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"SIGNUP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: authSubmithandler,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          id: \"username\",\n          label: \"username\",\n          element: \"input\",\n          validators: [VALIDATOR_REQUIRE()],\n          errorText: \"Plaese enter a valid username\",\n          onInput: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"email\",\n          label: \"email\",\n          element: \"input\",\n          validators: [VALIDATOR_EMAIL()],\n          errorText: \"Plaese enter a valid email\",\n          onInput: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"IMAGE UPLOAD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"password\",\n          label: \"password\",\n          element: \"input\",\n          type: \"password\",\n          validators: [VALIDATOR_MINLENGTH(6)],\n          errorText: \"Plaese enter a valid password\",\n          onInput: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-footer\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            inverse: true,\n            onClick: switchModeHandler,\n            children: [\"SWITCH TO \", isLoginMode ? 'SIGNUP' : 'LOGIN']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"SIGNUP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Auth, \"Y88WmnhzBE9+x4mchfdEBtE0Qbk=\", false, function () {\n  return [useForm];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/Users/davegb313/code/parties/frontend/src/user/Auth.js"],"names":["React","useContext","useState","Button","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","VALIDATOR_EMAIL","useForm","AuthContext","Card","Input","Auth","props","isLoginMode","setIsLoginMode","auth","formState","inputHandler","setFromData","email","value","isValid","password","switchModeHandler","inputs","username","undefined","image","prevMode","authSubmithandler","event","prevrntDefault","response","fetch","method","headers","body","JSON","stringify","resData","json","console","log","err","login"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\n\nimport Button from \"../shared/UIElemnets/Button\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH, VALIDATOR_EMAIL } from \"../shared/util/validators\";\nimport { useForm } from \"../shared/hooks/form-hook\";\nimport { AuthContext } from \"../shared/context/auth-context\";\nimport Card from \"../shared/UIElemnets/Card\";\nimport Input from \"../shared/UIElemnets/Input\";\nimport \"./Auth.css\";\n\nconst Auth = props =>{\n    const [isLoginMode, setIsLoginMode] = useState(true)\n    const auth = useContext(AuthContext);\n    const [formState, inputHandler, setFromData] = useForm(\n        {\n            email: {\n                value: '',\n                isValid: false\n            },\n            password: {\n                value: '',\n                isValid: false\n            },\n        },\n        false\n    );\n\n    const switchModeHandler = () => {\n        if (!isLoginMode) {\n            setFromData({\n                ...formState.inputs,\n                username: undefined,\n                image: undefined\n            },\n            formState.inputs.email.isValid && formState.inputs.password.isValid\n            );\n        } else {\n            setFromData({\n                ...formState.inputs,\n                username: {\n                    value: '',\n                    isValid: false\n                }\n            },\n            false\n            );\n        }\n        setIsLoginMode(prevMode => !prevMode);\n    }\n\n    const authSubmithandler = async event => {\n        event.prevrntDefault();\n\n        if(isLoginMode) {\n        } else {\n            try {\n                let response = await fetch('http://localhost:4000/signup', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type' : 'application/json'\n                    },\n                    body: JSON.stringify({\n                        username: formState.inputs.username.value,\n                        email: formState.inputs.email.value,\n                        password: formState.inputs.password.value\n                    })\n                });\n                let resData = await response.json();\n                console.log(resData);\n            } catch(err) {\n                console.log('err');\n            }\n        }\n        auth.login();\n    }\n\n    return (\n        <React.Fragment>\n            {isLoginMode ? (\n                <Card className=\"auth\">\n                    <h2>LOGIN</h2>\n                    <form onSubmit={authSubmithandler}>\n                        <Input \n                            id=\"username\" \n                            label=\"username\" \n                            element=\"input\" \n                            validators={[VALIDATOR_REQUIRE()]} \n                            errorText=\"Plaese enter a valid username\"\n                            onInput={inputHandler}\n                        />\n                        <Input \n                            id=\"password\" \n                            label=\"password\" \n                            element=\"input\" \n                            type=\"password\" \n                            validators={[VALIDATOR_MINLENGTH(6)]} \n                            errorText=\"Plaese enter a valid password\"\n                            onInput={inputHandler}\n                        />\n                        <div className=\"auth-footer\">\n                            <Button inverse onClick={switchModeHandler}>\n                                SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n                            </Button>\n                            <Button>LOGIN</Button>\n                        </div>\n                    </form>\n                </Card>\n                ) : (\n                <Card className=\"auth\">\n                    <h2>SIGNUP</h2>\n                    <form onSubmit={authSubmithandler}>\n                        <Input \n                            id=\"username\" \n                            label=\"username\" \n                            element=\"input\" \n                            validators={[VALIDATOR_REQUIRE()]} \n                            errorText=\"Plaese enter a valid username\"\n                            onInput={inputHandler}\n                        />\n                        <Input \n                            id=\"email\" \n                            label=\"email\" \n                            element=\"input\" \n                            validators={[VALIDATOR_EMAIL()]} \n                            errorText=\"Plaese enter a valid email\"\n                            onInput={inputHandler}\n                        />\n                        <h3>IMAGE UPLOAD</h3>\n                        <Input \n                            id=\"password\" \n                            label=\"password\" \n                            element=\"input\" \n                            type=\"password\" \n                            validators={[VALIDATOR_MINLENGTH(6)]} \n                            errorText=\"Plaese enter a valid password\"\n                            onInput={inputHandler} \n                        />\n                        <div className=\"auth-footer\">\n                            <Button inverse onClick={switchModeHandler}>\n                                SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n                            </Button>\n                            <Button type=\"submit\">SIGNUP</Button>\n                        </div>\n                    </form>\n                </Card>\n                )\n            }\n        </React.Fragment>\n    )\n}\n\nexport default Auth;"]},"metadata":{},"sourceType":"module"}