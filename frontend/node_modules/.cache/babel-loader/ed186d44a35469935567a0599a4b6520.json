{"ast":null,"code":"var _jsxFileName = \"/Users/davegb313/code/parties/src/user/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Button from \"../shared/UIElemnets/Button\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH, VALIDATOR_EMAIL } from \"../shared/util/validators\";\nimport Card from \"../shared/UIElemnets/Card\";\nimport Input from \"../shared/UIElemnets/Input\";\nimport \"./Auth.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = props => {\n  _s();\n\n  const [isLoginMode, setIsLoginMode] = useState(true);\n\n  const switchModeHandler = () => {\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: isLoginMode ? /*#__PURE__*/_jsxDEV(Card, {\n      className: \"auth\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"LOGIN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          id: \"username\",\n          label: \"username\",\n          element: \"input\",\n          validators: [VALIDATOR_REQUIRE()],\n          errorText: \"Plaese enter a valid username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"password\",\n          label: \"password\",\n          element: \"input\",\n          type: \"password\",\n          validators: [VALIDATOR_MINLENGTH(6)],\n          errorText: \"Plaese enter a valid password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-footer\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            inverse: true,\n            onClick: switchModeHandler,\n            children: [\"SWITCH TO \", isLoginMode ? 'SIGNUP' : 'LOGIN']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            children: \"LOGIN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Card, {\n      className: \"auth\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"SIGNUP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"username\",\n        label: \"username\",\n        element: \"input\",\n        validators: [VALIDATOR_REQUIRE()],\n        errorText: \"Plaese enter a valid username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"email\",\n        label: \"email\",\n        element: \"input\",\n        validators: [VALIDATOR_EMAIL()],\n        errorText: \"Plaese enter a valid email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"password\",\n        label: \"password\",\n        element: \"input\",\n        type: \"password\",\n        validators: [VALIDATOR_MINLENGTH(4)],\n        errorText: \"Plaese enter a valid password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"IMAGE UPLOAD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-footer\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          inverse: true,\n          onClick: switchModeHandler,\n          children: [\"SWITCH TO \", isLoginMode ? 'SIGNUP' : 'LOGIN']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          children: \"SIGNUP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Auth, \"01jftG454T0sT2galWzcYZLnBZw=\");\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/Users/davegb313/code/parties/src/user/Auth.js"],"names":["React","useState","Button","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","VALIDATOR_EMAIL","Card","Input","Auth","props","isLoginMode","setIsLoginMode","switchModeHandler","prevMode"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport Button from \"../shared/UIElemnets/Button\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH, VALIDATOR_EMAIL } from \"../shared/util/validators\";\nimport Card from \"../shared/UIElemnets/Card\";\nimport Input from \"../shared/UIElemnets/Input\";\nimport \"./Auth.css\";\n\nconst Auth = props =>{\n    const [isLoginMode, setIsLoginMode] = useState(true)\n\n    const switchModeHandler = () => {\n        setIsLoginMode(prevMode => !prevMode);\n    }\n\n    return (\n        <React.Fragment>\n            {isLoginMode ? (\n                <Card className=\"auth\">\n                    <h2>LOGIN</h2>\n                    <form>\n                        <Input \n                            id=\"username\" \n                            label=\"username\" \n                            element=\"input\" \n                            validators={[VALIDATOR_REQUIRE()]} \n                            errorText=\"Plaese enter a valid username\"/>\n                        <Input \n                            id=\"password\" \n                            label=\"password\" \n                            element=\"input\" \n                            type=\"password\" \n                            validators={[VALIDATOR_MINLENGTH(6)]} \n                            errorText=\"Plaese enter a valid password\" />\n                        <div className=\"auth-footer\">\n                            <Button inverse onClick={switchModeHandler}>\n                                SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n                            </Button>\n                            <Button>LOGIN</Button>\n                        </div>\n                        </form>\n                </Card>\n                ) : (\n                <Card className=\"auth\">\n                    <h2>SIGNUP</h2>\n                    <Input \n                        id=\"username\" \n                        label=\"username\" \n                        element=\"input\" \n                        validators={[VALIDATOR_REQUIRE()]} \n                        errorText=\"Plaese enter a valid username\"/>\n                    <Input \n                        id=\"email\" \n                        label=\"email\" \n                        element=\"input\" \n                        validators={[VALIDATOR_EMAIL()]} \n                        errorText=\"Plaese enter a valid email\"/>\n                    <Input \n                        id=\"password\" \n                        label=\"password\" \n                        element=\"input\" \n                        type=\"password\" \n                        validators={[VALIDATOR_MINLENGTH(4)]} \n                        errorText=\"Plaese enter a valid password\" />\n                    <h3>IMAGE UPLOAD</h3>\n                    <div className=\"auth-footer\">\n                        <Button inverse onClick={switchModeHandler}>\n                            SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n                        </Button>\n                        <Button>SIGNUP</Button>\n                    </div>\n                </Card>\n                )\n            }\n        </React.Fragment>\n    )\n}\n\nexport default Auth;"]},"metadata":{},"sourceType":"module"}