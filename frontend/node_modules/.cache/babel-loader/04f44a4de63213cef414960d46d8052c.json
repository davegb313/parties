{"ast":null,"code":"var _jsxFileName = \"/Users/davegb313/code/new-parties-project/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport Parties from './parties/pages/Parties';\nimport MainNavigation from './shared/Navigation/MainNavigation';\nimport NewParty from './parties/pages/NewParty';\nimport UpdateParty from './parties/pages/UpdateParty';\nimport Auth from './user/Auth';\nimport UserInfo from './user/UserInfo';\nimport { AuthContext } from './shared/context/auth-context';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet logoutTimer;\n\nconst App = () => {\n  _s();\n\n  const [token, setToken] = useState(false);\n  const [tokenExperationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(undefined);\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 3600);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem('userData', JSON.stringify({\n      userId: uid,\n      token: token,\n      expiration: tokenExpirationDate.toISOString()\n    }));\n  }, []);\n  const logout = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    setTokenExpirationDate(null);\n    localStorage.removeItem('userData');\n  }, []);\n  useEffect(() => {\n    if (token && tokenExperationDate) {\n      let remainingTime = tokenExperationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExperationDate]);\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n\n    if (storedData && storedData.token && new Date(storedData.expirationDate) > new Date()) {\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\n    }\n  }, [login]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: !!token,\n      token: token,\n      userId: userId,\n      login: login,\n      logout: logout\n    },\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(MainNavigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: token ? /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/parties/all\",\n            element: /*#__PURE__*/_jsxDEV(Parties, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/parties/new\",\n            element: /*#__PURE__*/_jsxDEV(NewParty, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/parties/party/:partyId\",\n            element: /*#__PURE__*/_jsxDEV(UpdateParty, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 62\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/user/:userId\",\n            element: /*#__PURE__*/_jsxDEV(UserInfo, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/parties/all\",\n            element: /*#__PURE__*/_jsxDEV(Parties, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/auth\",\n            element: /*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"EmE8LDi7/BPvieJ0UDhIuvLd/v0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/davegb313/code/new-parties-project/frontend/src/App.js"],"names":["React","useState","useCallback","useEffect","BrowserRouter","Route","Routes","Parties","MainNavigation","NewParty","UpdateParty","Auth","UserInfo","AuthContext","logoutTimer","App","token","setToken","tokenExperationDate","setTokenExpirationDate","userId","setUserId","undefined","login","uid","expirationDate","tokenExpirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","logout","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","isLoggedIn"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport {\n  BrowserRouter,\n  Route,\n  Routes\n} from \"react-router-dom\";\n\nimport Parties from './parties/pages/Parties';\nimport MainNavigation from './shared/Navigation/MainNavigation';\nimport NewParty from './parties/pages/NewParty';\nimport UpdateParty from './parties/pages/UpdateParty';\nimport Auth from './user/Auth';\nimport UserInfo from './user/UserInfo';\nimport { AuthContext } from './shared/context/auth-context';\nimport './App.css';\n\nlet logoutTimer;\n\nconst App = () => {\n  const [token, setToken] = useState(false);\n  const [tokenExperationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(undefined);\n\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 3600);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem(\n      'userData',\n      JSON.stringify({\n        userId: uid,\n        token: token,\n        expiration: tokenExpirationDate.toISOString()\n      })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    setTokenExpirationDate(null);\n    localStorage.removeItem('userData');\n  }, []);\n\n  useEffect(()=> {\n    if (token && tokenExperationDate) {\n      let remainingTime = tokenExperationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExperationDate]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n    if (storedData && storedData.token && new Date(storedData.expirationDate) > new Date()) {\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\n    }\n  }, [login]);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout\n      }}\n    >\n      <BrowserRouter>\n        <MainNavigation />\n        <main>\n          {token ? (\n            <Routes>\n              <Route path=\"/parties/all\" element={<Parties />} />\n              <Route path=\"/parties/new\" element={<NewParty />} />\n              <Route path=\"/parties/party/:partyId\" element={<UpdateParty />} />\n              <Route path=\"/user/:userId\" element={<UserInfo />} />\n            </Routes>\n          ) : (\n            <Routes>\n              <Route path=\"/parties/all\" element={<Parties />} />\n              <Route path=\"/auth\" element={<Auth />} />\n            </Routes>\n          )}\n        </main>\n      </BrowserRouter>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}