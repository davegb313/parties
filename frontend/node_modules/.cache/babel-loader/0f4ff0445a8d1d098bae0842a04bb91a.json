{"ast":null,"code":"var _jsxFileName = \"/Users/davegb313/code/new-parties-project/frontend/src/user/UserInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport AttendingItem from \"../parties/components/AttendingItem\";\nimport { AuthContext } from \"../shared/context/auth-context\";\nimport { useHttpClient } from \"../shared/hooks/http-hook\";\nimport ErrorModal from \"../shared/UIElemnets/ErrorModal\";\nimport LoadingSpinner from \"../shared/UIElemnets/LoadingSpinner\";\nimport PartyList from \"../parties/components/PartyList\";\nimport Avatar from \"../shared/UIElemnets/Avatar\";\nimport Button from \"../shared/UIElemnets/Button\";\nimport Card from \"../shared/UIElemnets/Card\";\nimport \"./UserInfo.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserInfo = props => {\n  _s();\n\n  const auth = useContext(AuthContext);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [loadedUser, setLoadedUser] = useState();\n  const [loadedUserParties, setLoadedUserParties] = useState();\n  const [loadedSavedUserParties, setSavedUserParties] = useState();\n  const userId = auth.userId;\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const userDataRes = await sendRequest(`http://localhost:4000/user/${userId}`);\n        setLoadedUser(userDataRes.user);\n      } catch (err) {}\n\n      try {\n        const userPartiesRes = await sendRequest(`http://localhost:4000/parties/${userId}`);\n        userPartiesRes ? setLoadedUserParties(userPartiesRes.userParties) : setLoadedUserParties([]);\n      } catch (err) {}\n\n      try {\n        const userSavedPartiesRes = await sendRequest(`http://localhost:4000/parties/get-saved/${userId}`);\n        userSavedPartiesRes ? setSavedUserParties(userSavedPartiesRes.savedParties) : setSavedUserParties([]);\n      } catch (err) {}\n    };\n\n    fetchUser();\n  }, [sendRequest]);\n\n  const partyDeletedHandler = deletedPartyId => setLoadedUserParties(prevParties => prevParties.filter(party => party.id !== deletedPartyId));\n\n  const partyUnsaveHandler = unsavedPartyId => setSavedUserParties(prevParties => prevParties.filter(party => party.id !== unsavedPartyId));\n\n  console.log(loadedUser);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: error,\n      onClick: clearError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this), !isLoading && loadedUser && loadedUserParties && loadedSavedUserParties && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          className: \"personal-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"personal-info-img\",\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              image: `http://localhost:4000/${loadedUser.image}`,\n              alt: \"user-photo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: loadedUser.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"personal-info-email\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: loadedUser.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-attend\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"attending-title\",\n            children: \"Parties you're attending at:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this), loadedSavedUserParties.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"party-list center\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"There are no saved parties found. Want save one?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                to: \"/parties/all\",\n                children: \"Save Party\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"attending-list\",\n            children: loadedSavedUserParties.map(party => /*#__PURE__*/_jsxDEV(AttendingItem, {\n              id: party.id,\n              image: party.image,\n              title: party.title,\n              description: party.description,\n              address: party.address,\n              onUnsave: partyUnsaveHandler\n            }, party.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"your-parties-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Your Parties\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(PartyList, {\n        items: loadedUserParties,\n        isLoggedIn: true,\n        onDeleteParty: partyDeletedHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserInfo, \"lgLD4Et/uMnG+0L+NjAAiNVy4/E=\", false, function () {\n  return [useHttpClient];\n});\n\n_c = UserInfo;\nexport default UserInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserInfo\");","map":{"version":3,"sources":["/Users/davegb313/code/new-parties-project/frontend/src/user/UserInfo.js"],"names":["React","useState","useEffect","useContext","AttendingItem","AuthContext","useHttpClient","ErrorModal","LoadingSpinner","PartyList","Avatar","Button","Card","UserInfo","props","auth","isLoading","error","sendRequest","clearError","loadedUser","setLoadedUser","loadedUserParties","setLoadedUserParties","loadedSavedUserParties","setSavedUserParties","userId","fetchUser","userDataRes","user","err","userPartiesRes","userParties","userSavedPartiesRes","savedParties","partyDeletedHandler","deletedPartyId","prevParties","filter","party","id","partyUnsaveHandler","unsavedPartyId","console","log","image","username","email","length","map","title","description","address"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\n\nimport AttendingItem from \"../parties/components/AttendingItem\";\nimport { AuthContext } from \"../shared/context/auth-context\";\nimport { useHttpClient } from \"../shared/hooks/http-hook\";\nimport ErrorModal from \"../shared/UIElemnets/ErrorModal\";\nimport LoadingSpinner from \"../shared/UIElemnets/LoadingSpinner\";\nimport PartyList from \"../parties/components/PartyList\";\nimport Avatar from \"../shared/UIElemnets/Avatar\";\nimport Button from \"../shared/UIElemnets/Button\";\nimport Card from \"../shared/UIElemnets/Card\";\n\nimport \"./UserInfo.css\";\n\nconst UserInfo = props => {\n    const auth = useContext(AuthContext);\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\n    const [loadedUser, setLoadedUser] = useState();\n    const [loadedUserParties, setLoadedUserParties] = useState();\n    const [loadedSavedUserParties, setSavedUserParties] = useState();\n    const userId = auth.userId\n\n    useEffect(() => {\n        const fetchUser = async () => {\n            try {\n                const userDataRes = await sendRequest(`http://localhost:4000/user/${userId}`);\n                setLoadedUser(userDataRes.user);\n            } catch (err) { }\n\n            try {\n                const userPartiesRes = await sendRequest(`http://localhost:4000/parties/${userId}`);\n                userPartiesRes ? setLoadedUserParties(userPartiesRes.userParties) : setLoadedUserParties([]);\n            } catch (err) { }\n\n            try {\n                const userSavedPartiesRes = await sendRequest(`http://localhost:4000/parties/get-saved/${userId}`);\n                userSavedPartiesRes ? setSavedUserParties(userSavedPartiesRes.savedParties) : setSavedUserParties([]);\n            } catch (err) { }\n        }\n        fetchUser()\n    }, [sendRequest])\n\n    const partyDeletedHandler = deletedPartyId => setLoadedUserParties(\n        prevParties => prevParties.filter(party => party.id !== deletedPartyId)\n    );\n\n    const partyUnsaveHandler = unsavedPartyId => setSavedUserParties(\n        prevParties => prevParties.filter(party => party.id !== unsavedPartyId)\n    );\n        console.log(loadedUser);\n    return (\n        <React.Fragment>\n            <ErrorModal error={error} onClick={clearError} />\n            {isLoading && (\n                <div className=\"center\">\n                    <LoadingSpinner />\n                </div>\n            )}\n            {!isLoading && loadedUser && loadedUserParties && loadedSavedUserParties && (\n                <>\n                    <div className=\"user-info\">\n                        <Card className=\"personal-info\">\n                            <div className=\"personal-info-img\">\n                                <Avatar\n                                    image={`http://localhost:4000/${loadedUser.image}`}\n                                    alt={\"user-photo\"}\n                                />\n                                <h3>{loadedUser.username}</h3>\n                            </div>\n                            <div className=\"personal-info-email\">\n                                <h4>Email:</h4>\n                                <p>{loadedUser.email}</p>\n                            </div>\n                        </Card>\n                        <div className=\"user-attend\">\n                            <h3 className=\"attending-title\">Parties you're attending at:</h3>\n                            {(loadedSavedUserParties.length === 0) ? (\n                                <div className=\"party-list center\">\n                                    <Card>\n                                        <h2>There are no saved parties found. Want save one?</h2>\n                                        <Button to=\"/parties/all\">Save Party</Button>\n                                    </Card>\n                                </div>\n                            ) : (\n                                <ul className=\"attending-list\">\n                                    {loadedSavedUserParties.map(party => (\n                                        <AttendingItem\n                                            key={party.id}\n                                            id={party.id}\n                                            image={party.image}\n                                            title={party.title}\n                                            description={party.description}\n                                            address={party.address}\n                                            onUnsave={partyUnsaveHandler} />\n                                    ))}\n                                </ul>\n                            )}\n                        </div>\n                    </div>\n                    <div className=\"your-parties-header\">\n                        <h1>Your Parties</h1>\n                    </div>\n                    <PartyList items={loadedUserParties} isLoggedIn={true} onDeleteParty={partyDeletedHandler} />\n                </>\n            )}\n        </React.Fragment>\n    )\n}\n\nexport default UserInfo;"]},"metadata":{},"sourceType":"module"}