{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n\n      return { ...state,\n        inputs: { ...state.inputs,\n          [action.inputId]: {\n            value: action.value,\n            isValid: action.isValid\n          }\n        },\n        isValid: formIsValid\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialValidity) => {\n  _s();\n\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialValidity\n  });\n  const inputHandler = useCallback((id, value, isValid) => {\n    console.log('were here');\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n  return [formState, inputHandler];\n};\n\n_s(useForm, \"FwSqCVGRkGnbKfHkBho5pJQSb/E=\");","map":{"version":3,"sources":["/Users/davegb313/code/parties/src/shared/hooks/form-hook.js"],"names":["useCallback","useReducer","formReducer","state","action","type","formIsValid","inputId","inputs","isValid","value","useForm","initialInputs","initialValidity","formState","dispatch","inputHandler","id","console","log"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,UAAtB,QAAwC,OAAxC;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AACE,UAAIC,WAAW,GAAG,IAAlB;;AACA,WAAK,MAAMC,OAAX,IAAsBJ,KAAK,CAACK,MAA5B,EAAoC;AAClC,YAAID,OAAO,KAAKH,MAAM,CAACG,OAAvB,EAAgC;AAC9BD,UAAAA,WAAW,GAAGA,WAAW,IAAIF,MAAM,CAACK,OAApC;AACD,SAFD,MAEO;AACLH,UAAAA,WAAW,GAAGA,WAAW,IAAIH,KAAK,CAACK,MAAN,CAAaD,OAAb,EAAsBE,OAAnD;AACD;AACF;;AACD,aAAO,EACL,GAAGN,KADE;AAELK,QAAAA,MAAM,EAAE,EACN,GAAGL,KAAK,CAACK,MADH;AAEN,WAACJ,MAAM,CAACG,OAAR,GAAkB;AAAEG,YAAAA,KAAK,EAAEN,MAAM,CAACM,KAAhB;AAAuBD,YAAAA,OAAO,EAAEL,MAAM,CAACK;AAAvC;AAFZ,SAFH;AAMLA,QAAAA,OAAO,EAAEH;AANJ,OAAP;;AAQF;AACE,aAAOH,KAAP;AAnBJ;AAqBD,CAtBH;;AAyBE,OAAO,MAAMQ,OAAO,GAAG,CAACC,aAAD,EAAgBC,eAAhB,KAAoC;AAAA;;AACzD,QAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBd,UAAU,CAACC,WAAD,EAAc;AAClDM,IAAAA,MAAM,EAAEI,aAD0C;AAElDH,IAAAA,OAAO,EAAEI;AAFyC,GAAd,CAAxC;AAKA,QAAMG,YAAY,GAAGhB,WAAW,CAAC,CAACiB,EAAD,EAAKP,KAAL,EAAYD,OAAZ,KAAwB;AACrDS,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAJ,IAAAA,QAAQ,CAAC;AACLV,MAAAA,IAAI,EAAE,cADD;AAELK,MAAAA,KAAK,EAAEA,KAFF;AAGLD,MAAAA,OAAO,EAAEA,OAHJ;AAILF,MAAAA,OAAO,EAAEU;AAJJ,KAAD,CAAR;AAMH,GAR+B,EAQ7B,EAR6B,CAAhC;AAUA,SAAO,CAACH,SAAD,EAAYE,YAAZ,CAAP;AACD,CAjBM;;GAAML,O","sourcesContent":["import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n    switch (action.type) {\n      case 'INPUT_CHANGE':\n        let formIsValid = true;\n        for (const inputId in state.inputs) {\n          if (inputId === action.inputId) {\n            formIsValid = formIsValid && action.isValid;\n          } else {\n            formIsValid = formIsValid && state.inputs[inputId].isValid;\n          }\n        }\n        return {\n          ...state,\n          inputs: {\n            ...state.inputs,\n            [action.inputId]: { value: action.value, isValid: action.isValid }\n          },\n          isValid: formIsValid\n        };\n      default:\n        return state;\n    }\n  };\n\n\n  export const useForm = (initialInputs, initialValidity) => {\n    const [formState, dispatch] = useReducer(formReducer, {\n        inputs: initialInputs,\n        isValid: initialValidity\n      });\n\n    const inputHandler = useCallback((id, value, isValid) => {\n        console.log('were here');\n        dispatch({\n            type: 'INPUT_CHANGE',\n            value: value,\n            isValid: isValid,\n            inputId: id\n        });\n    }, []);\n\n    return [formState, inputHandler]\n  }"]},"metadata":{},"sourceType":"module"}